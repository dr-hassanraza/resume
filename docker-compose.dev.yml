version: '3.8'

# Development version with hot reloading and development optimizations

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: resume_optimizer_postgres_dev
    environment:
      POSTGRES_DB: resume_optimizer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: resume_optimizer_redis_dev
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API (Development mode with hot reloading)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: resume_optimizer_backend_dev
    environment:
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/resume_optimizer
      - REDIS_URL=redis://:redis123@redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_key_here}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-your_anthropic_key_here}
      - QWEN_API_KEY=${QWEN_API_KEY:-your_qwen_key_here}
      - JWT_SECRET=dev_jwt_secret_key_not_for_production
      - SECRET_KEY=dev_secret_key_not_for_production
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_dev_stripe_key}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-your_sendgrid_key}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000,http://192.168.1.100:3000
      - DEBUG=true
      - PYTHONPATH=/app
      - WATCHDOG_ENABLE=true
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/app

  # Frontend Web App (Development mode)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: resume_optimizer_frontend_dev
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001
      - NEXT_PUBLIC_WS_URL=ws://localhost:8001
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY:-pk_test_dev_stripe_key}
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend-dev
    restart: unless-stopped
    command: npm run dev

  # Mobile Development Server (Expo)
  mobile-dev:
    build:
      context: ./mobile
      dockerfile: Dockerfile.dev
    container_name: resume_optimizer_mobile_dev
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=192.168.22.101
    volumes:
      - ./mobile:/app
      - /app/node_modules
    ports:
      - "19000:19000"  # Expo DevTools
      - "19001:19001"  # Expo CLI
      - "19002:19002"  # Metro bundler
      - "19006:19006"  # Expo web
    restart: unless-stopped
    command: npx expo start --dev-client

  # Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4
    container_name: resume_optimizer_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@resumeoptimizer.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

  # Redis Admin (Redis Commander)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: resume_optimizer_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redis123
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_dev_data:
  redis_dev_data:
  pgadmin_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16